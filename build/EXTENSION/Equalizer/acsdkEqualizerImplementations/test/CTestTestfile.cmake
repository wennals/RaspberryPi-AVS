# CMake generated Testfile for 
# Source directory: /home/pi/alexa-voice-service-sdk/src/avs-device-sdk/capabilities/Equalizer/acsdkEqualizerImplementations/test
# Build directory: /home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
add_test(EqualizerControllerTest.test_providedEmptyConfig_shouldUseDefaults "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_providedEmptyConfig_shouldUseDefaults")
add_test(EqualizerControllerTest.test_changeBandLevels_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_changeBandLevels_shouldSucceed")
add_test(EqualizerControllerTest.test_setInvalidBandLevels_shouldClampToSupportedRange "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_setInvalidBandLevels_shouldClampToSupportedRange")
add_test(EqualizerControllerTest.test_setMode_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_setMode_shouldSucceed")
add_test(EqualizerControllerTest.test_setInvalidMode_shouldNotChangeMode "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_setInvalidMode_shouldNotChangeMode")
add_test(EqualizerControllerTest.test_providedBandLevelChanges_addRemoveListener_shouldFollowSubscriptionStatus "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_providedBandLevelChanges_addRemoveListener_shouldFollowSubscriptionStatus")
add_test(EqualizerControllerTest.test_providedModeChanges_addRemoveListener_shouldFollowSubscriptionStatus "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_providedModeChanges_addRemoveListener_shouldFollowSubscriptionStatus")
add_test(EqualizerControllerTest.test_triggerChangesMultipleTimes_ExpectListenersNotifiedSameTimes "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_triggerChangesMultipleTimes_ExpectListenersNotifiedSameTimes")
add_test(EqualizerControllerTest.test_providedBandLevelChanges_addRemoveSingleEqualizer_shouldFollowRegistrationStatus "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_providedBandLevelChanges_addRemoveSingleEqualizer_shouldFollowRegistrationStatus")
add_test(EqualizerControllerTest.test_triggerChangesMultipleTimes_ExpectEqualizersCalledSameTimes "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_triggerChangesMultipleTimes_ExpectEqualizersCalledSameTimes")
add_test(EqualizerControllerTest.test_saveLoadStateWithPersistentStorage_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_saveLoadStateWithPersistentStorage_shouldSucceed")
add_test(EqualizerControllerTest.test_setLevelBelowEqualizerMinimum_shouldClamp "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_setLevelBelowEqualizerMinimum_shouldClamp")
add_test(EqualizerControllerTest.test_setLevelAboveEqualizerMaximum_shouldClamp "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerControllerTest" "--gtest_filter=EqualizerControllerTest.test_setLevelAboveEqualizerMaximum_shouldClamp")
add_test(EqualizerLinearBandMapperTest.test_givenValidParameters_create_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenValidParameters_create_shouldSucceed")
add_test(EqualizerLinearBandMapperTest.test_givenInvalidParameters_create_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenInvalidParameters_create_shouldFail")
add_test(EqualizerLinearBandMapperTest.test_givenSameAsAVSBands_map_shouldNotModifyLevels "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenSameAsAVSBands_map_shouldNotModifyLevels")
add_test(EqualizerLinearBandMapperTest.test_givenMoreBandsToMapTo_mapAllSameNonZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenMoreBandsToMapTo_mapAllSameNonZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenMoreBandsToMapTo_mapAllSameZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenMoreBandsToMapTo_mapAllSameZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenDoubleBandsToMapTo_mapAllSameNonZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenDoubleBandsToMapTo_mapAllSameNonZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenDoubleBandsToMapTo_mapAllSameZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenDoubleBandsToMapTo_mapAllSameZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenLessBandsToMapTo_mapAllSameNonZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenLessBandsToMapTo_mapAllSameNonZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenLessBandsToMapTo_mapAllSameZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenLessBandsToMapTo_mapAllSameZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenOneBandToMapTo_mapNonZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenOneBandToMapTo_mapNonZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenOneBandToMapTo_mapZero_shouldMapToSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenOneBandToMapTo_mapZero_shouldMapToSame")
add_test(EqualizerLinearBandMapperTest.test_givenAnyNumberOfBands_map_shouldKeepAverageLevel "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenAnyNumberOfBands_map_shouldKeepAverageLevel")
add_test(EqualizerLinearBandMapperTest.test_givenMoreBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenMoreBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput")
add_test(EqualizerLinearBandMapperTest.test_givenEvenMoreBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenEvenMoreBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput")
add_test(EqualizerLinearBandMapperTest.test_givenLessBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenLessBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput")
add_test(EqualizerLinearBandMapperTest.test_givenEvenLessBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenEvenLessBandsToMapTo_mapSpecificValues_shouldMapToSpecificOutput")
add_test(EqualizerLinearBandMapperTest.test_givenOneBandSupported_mapToOneBand_shouldMapSameValue "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenOneBandSupported_mapToOneBand_shouldMapSameValue")
add_test(EqualizerLinearBandMapperTest.test_givenOneBandSupported_mapToTwoBands_shouldMapToBothSame "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenOneBandSupported_mapToTwoBands_shouldMapToBothSame")
add_test(EqualizerLinearBandMapperTest.test_givenTwoBandsSupported_mapToOneBands_shouldMapToAverage "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/EqualizerLinearBandMapperTest" "--gtest_filter=EqualizerLinearBandMapperTest.test_givenTwoBandsSupported_mapToOneBands_shouldMapToAverage")
add_test(InMemoryEqualizerConfigurationTest.test_providedValidParameters_createInstance_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedValidParameters_createInstance_shouldSucceed")
add_test(InMemoryEqualizerConfigurationTest.test_providedInvalidLevelRange_createInstance_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedInvalidLevelRange_createInstance_shouldFail")
add_test(InMemoryEqualizerConfigurationTest.test_providedInvalidBandDelta_createInstance_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedInvalidBandDelta_createInstance_shouldFail")
add_test(InMemoryEqualizerConfigurationTest.test_providedMixMaxLevelSetToDefault_createInstance_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedMixMaxLevelSetToDefault_createInstance_shouldSucceed")
add_test(InMemoryEqualizerConfigurationTest.test_providedSameNonDefaultMixMaxLevel_createInstance_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedSameNonDefaultMixMaxLevel_createInstance_shouldSucceed")
add_test(InMemoryEqualizerConfigurationTest.test_providedDefaultStateLevelAboveMax_createInstance_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedDefaultStateLevelAboveMax_createInstance_shouldFail")
add_test(InMemoryEqualizerConfigurationTest.test_providedDefaultStateLevelBelowMin_createInstance_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedDefaultStateLevelBelowMin_createInstance_shouldFail")
add_test(InMemoryEqualizerConfigurationTest.test_providedNoModes_createInstance_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedNoModes_createInstance_shouldSucceed")
add_test(InMemoryEqualizerConfigurationTest.test_providedSupportedModeInDefaultState_createInstance_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedSupportedModeInDefaultState_createInstance_shouldSucceed")
add_test(InMemoryEqualizerConfigurationTest.test_providedUnsupportedModeInDefaultState_createInstance_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedUnsupportedModeInDefaultState_createInstance_shouldFail")
add_test(InMemoryEqualizerConfigurationTest.test_providedNONEModeAsSupported_createInstance_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedNONEModeAsSupported_createInstance_shouldSucceed")
add_test(InMemoryEqualizerConfigurationTest.test_providedValidConfiguration_isSupportedMethods_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/InMemoryEqualizerConfigurationTest" "--gtest_filter=InMemoryEqualizerConfigurationTest.test_providedValidConfiguration_isSupportedMethods_shouldSucceed")
add_test(SDKConfigEqualizerConfigurationTest.test_providedEmptyConfig_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_providedEmptyConfig_shouldSucceed")
add_test(SDKConfigEqualizerConfigurationTest.test_providedEmptyConfig_shouldUseDefaultConfig "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_providedEmptyConfig_shouldUseDefaultConfig")
add_test(SDKConfigEqualizerConfigurationTest.test_providedLimitedBandsDefined_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_providedLimitedBandsDefined_shouldSucceed")
add_test(SDKConfigEqualizerConfigurationTest.test_providedLimitedBandsOneMissing_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_providedLimitedBandsOneMissing_shouldSucceed")
add_test(SDKConfigEqualizerConfigurationTest.test_havingEmptyBandList_shouldUseHardDefaults "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_havingEmptyBandList_shouldUseHardDefaults")
add_test(SDKConfigEqualizerConfigurationTest.test_havingOnlyInvalidBand_shouldSucceedAndSupportNone "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_havingOnlyInvalidBand_shouldSucceedAndSupportNone")
add_test(SDKConfigEqualizerConfigurationTest.test_oneModeDefinedAndEnabled_shouldPutOthersToDefaults "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_oneModeDefinedAndEnabled_shouldPutOthersToDefaults")
add_test(SDKConfigEqualizerConfigurationTest.test_oneModeDefinedAndDisabled_shouldPutOthersToDefaults "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_oneModeDefinedAndDisabled_shouldPutOthersToDefaults")
add_test(SDKConfigEqualizerConfigurationTest.test_givenEmptyDefaultStateBranchEmpty_shouldUseHardDefaults "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_givenEmptyDefaultStateBranchEmpty_shouldUseHardDefaults")
add_test(SDKConfigEqualizerConfigurationTest.test_givenSupportedDefaultMode_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_givenSupportedDefaultMode_shouldSucceed")
add_test(SDKConfigEqualizerConfigurationTest.test_givenUnsupportedDefaultMode_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_givenUnsupportedDefaultMode_shouldFail")
add_test(SDKConfigEqualizerConfigurationTest.test_havingNotAllBandsInDefaultState_shouldFail "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_havingNotAllBandsInDefaultState_shouldFail")
add_test(SDKConfigEqualizerConfigurationTest.test_havingNoBandsDefinedInDefaultStateWithNoBandsSupported_shouldSucceed "/home/pi/alexa-voice-service-sdk/build/EXTENSION/Equalizer/acsdkEqualizerImplementations/test/SDKConfigEqualizerConfigurationTest" "--gtest_filter=SDKConfigEqualizerConfigurationTest.test_havingNoBandsDefinedInDefaultStateWithNoBandsSupported_shouldSucceed")
